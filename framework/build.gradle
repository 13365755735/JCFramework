apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'realm-android'
android {
    compileSdkVersion defaultConfigs.compileSdkVersion
    buildToolsVersion defaultConfigs.buildToolsVersion
    defaultConfig {
        minSdkVersion defaultConfigs.minSdkVersion
        targetSdkVersion defaultConfigs.targetSdkVersion
        versionCode defaultConfigs.versionCode
        versionName defaultConfigs.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "versionCode"
    }
    buildTypes {

        release {
            buildConfigField("String", "frameworkCongigurationXmlName", '"framework_configuration"')
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField("String", "frameworkCongigurationXmlName", '"framework_configuration"')
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation deps.support.appcompat
    implementation deps.support.design
    implementation deps.okhttp3
    implementation deps.okhttp3_logging_interceptor
    implementation deps.rxjava2
    implementation deps.rxandroid2
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.retrofit.adapter
    implementation deps.glide
    implementation deps.support.recyclerview
    implementation deps.support.appcompat
    //下拉刷新
    implementation deps.refresh.smartrefresh_layout
    implementation deps.refresh.smartrefresh_header

//    implementation"com.google.dagger:dagger:2.16"
    implementation deps.dagger.runtime
    annotationProcessor deps.dagger.compiler
}
// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}